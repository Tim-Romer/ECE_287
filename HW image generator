LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY hw_image_generator IS
  GENERIC(
    pixels_y :  INTEGER := 478;   --row that first color will persist until
    pixels_x :  INTEGER := 600);  --column that first color will persist until
  PORT(
  
  		--Buttons
		L				:	IN		STD_LOGIC;
		U				:	IN		STD_LOGIC;
		D				:	IN		STD_LOGIC;
		R				:	IN		STD_LOGIC;
    
    disp_ena :  IN   STD_LOGIC;  --display enable ('1' = display time, '0' = blanking time)
    row      :  IN   INTEGER;    --row pixel coordinate
    column   :  IN   INTEGER;    --column pixel coordinate
    red      :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0) := (OTHERS => '0');  --red magnitude output to DAC
    green    :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0) := (OTHERS => '0');  --green magnitude output to DAC
    blue     :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0) := (OTHERS => '0')); --blue magnitude output to DAC
END hw_image_generator;

ARCHITECTURE behavior OF hw_image_generator IS

TYPE Level IS (BLUES, REDS, BLACK,  GREENS, PINK, TEAL, YELLOW, PURPLE, LIGHTBLUE, ORANGE, GREY, WHITE);
SIGNAL x3  : level := blues;
signal X1, X0,  x2, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 : Level := white;

signal R0 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G0 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B0 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R1 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G1 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B1 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R2 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G2 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B2 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R3 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G3 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B3 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R4 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G4 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B4 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R5 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G5 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B5 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R6 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G6 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B6 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R7 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G7 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B7 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R8 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G8 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B8 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R9 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G9 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B9 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R10 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G10 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B10 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R11 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G11 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B11 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R12 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G12 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B12 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R13 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G13 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B13 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R14 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G14 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B14 : STD_LOGIC_Vector(7 DOWNTO 0);

signal R15 : STD_LOGIC_Vector(7 DOWNTO 0);
signal G15 : STD_LOGIC_Vector(7 DOWNTO 0);
signal B15 : STD_LOGIC_Vector(7 DOWNTO 0);


BEGIN


  Draw : PROCESS(disp_ena, row, column)
	BEGIN
			
		IF(disp_ena = '1' ) THEN
		
	
		
		--box0
					
				IF((row > 0 AND row < 475) AND (column > 0  AND column < 265)) THEN
			
	
					red <= R0;
					green	<= G0;
					blue <= B0;
					
		--box1
					
				elsIF((row > 485 AND row < 955) AND (column > 0  AND column < 265)) THEN
			
	
					red <= R1;
					green	<= G1;
					blue <= B1;
					
		--box2
					
				elsIF((row > 965 AND row < 1435) AND (column > 0  AND column < 265)) THEN
			
	
					red <= R2;
					green	<= G2;
					blue <= B2;
					
		--box3
					
				elsIF((row > 1445 AND row < 1920) AND (column > 0  AND column < 265)) THEN
			
	
					red <= R3;
					green	<= G3;
					blue <= B3;
					
					
		--box4
					
				elsIF((row > 0 AND row < 475) AND (column > 275  AND column < 535)) THEN
			
	
					red <= R4;
					green	<= G4;
					blue <= B4;
					
		--box5
					
				elsIF((row > 485 AND row < 955) AND (column > 275  AND column < 535)) THEN
			
	
					red <= R5;
					green	<= G5;
					blue <= B5;
					
		--box6
					
				elsIF((row > 965 AND row < 1435) AND (column > 275  AND column < 535)) THEN
			
	
					red <= R6;
					green	<= G6;
					blue <= B6;
					
		--box7
					
				elsIF((row > 1445 AND row < 1920) AND (column > 275  AND column < 535)) THEN
			
	
					red <= R7;
					green	<= G7;
					blue <= B7;
					
		--box8
					
				elsIF((row > 0 AND row < 475) AND (column > 545  AND column < 805)) THEN
			
	
					red <= R8;
					green	<= G8;
					blue <= B8;
					
		--box9
					
				elsIF((row > 485 AND row < 955) AND (column > 545  AND column < 805)) THEN
			
	
					red <= R9;
					green	<= G9;
					blue <= B9;
					
		--box10
					
				elsIF((row > 965 AND row < 1435) AND (column > 545  AND column < 805)) THEN
			
	
					red <= R10;
					green	<= G10;
					blue <= B10;
					
		--box11
					
				elsIF((row > 1445 AND row < 1920) AND (column > 545  AND column < 805)) THEN
			
		
					red <= R11;
					green	<= G11;
					blue <= B11;
					
					
		--box12
					
				elsIF((row > 0 AND row < 475) AND (column > 815  AND column < 1080)) THEN
			
	
					red <= R12;
					green	<= G12;
					blue <= B12;
					
		--box13
					
				elsIF((row > 485 AND row < 955) AND (column > 815  AND column < 1080)) THEN
			
	
					red <= R13;
					green	<= G13;
					blue <= B13;
					
		--box14
					
				elsIF((row > 965 AND row < 1435) AND (column > 815  AND column < 1080)) THEN
			
	
					red <= R14;
					green	<= G14;
					blue <= B14;
					
		--box15
					
				elsIF((row > 1445 AND row < 1920) AND (column > 815  AND column < 1080)) THEN
			
	
					red <= R15;
					green	<= G15;
					blue <= B15;
					
						
					--Grid	
				elsIF((row > 475 AND row < 485) OR (row > 955 AND row < 965) OR (row > 1435 AND row < 1445)  ) THEN
					red <= (OTHERS => '0');
					green	<= (OTHERS => '0');
					blue <= (OTHERS => '0');
		
				ELSiF((column > 265 AND column < 275) OR (column > 535 AND column < 545) OR (column > 805 AND column < 815)  ) THEN
					red <= (OTHERS => '0');
					green	<= (OTHERS => '0');
					blue <= (OTHERS => '0');
				
			
				else
			
	
					red <= (OTHERS => '1');
					green	<= (OTHERS => '1');
					blue <= (OTHERS => '1');
					
					end if;
	
		ELSE								--blanking time
			red <= (OTHERS => '0');
			green <= (OTHERS => '0');
			blue <= (OTHERS => '0');
		END IF;
		

	END PROCESS Draw;
	
		Box0 : PROCESS(X0) 
	begin
	
	CASE X0 IS
	WHEN BLACK =>
 R0 <= "00000000";
 G0 <= "00000000";
 B0 <= "00000000";
 
WHEN REDS =>
 R0 <= "11111111";
 G0 <= "00000000";
 B0 <= "00000000";

WHEN BLUES =>
 R0 <= "00000000";
 G0 <= "00000000";
 B0 <= "11111111";
 
 WHEN GREENS =>
 R0 <= "00000000";
 G0 <= "11111111";
 B0 <= "00000000";
 
 WHEN PINK =>
 R0 <= "11111111";
 G0 <= "00000000";
 B0 <= "11111111";
 
 WHEN TEAL =>
 R0 <= "00000000";
 G0 <= "11111111";
 B0 <= "11111111";
 
 WHEN YELLOW =>
 R0 <= "11111111";
 G0 <= "11111111";
 B0 <= "00000000";
 
 WHEN PURPLE =>
 R0 <= "10000000";
 G0 <= "00000000";
 B0 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R0 <= "00000000";
 G0 <= "10000000";
 B0 <= "11111111";
 
 WHEN ORANGE =>
 R0 <= "11111111";
 G0 <= "10000000";
 B0 <= "00000000";
 
 WHEN GREY =>
 R0 <= "10000000";
 G0 <= "10000000";
 B0 <= "10000000";

 WHEN WHITE =>
 R0 <= "11111111";
 G0 <= "11111111";
 B0 <= "11111111";
 
 END CASE;
	
	END PROCESS Box0;
	
	Box1 : PROCESS(X1) 
	begin
	
	CASE X1 IS 
	WHEN BLACK =>
 R1 <= "00000000";
 G1 <= "00000000";
 B1 <= "00000000";
 
WHEN REDS =>
 R1 <= "11111111";
 G1 <= "00000000";
 B1 <= "00000000";

WHEN BLUES =>
 R1 <= "00000000";
 G1 <= "00000000";
 B1 <= "11111111";
 
 WHEN GREENS =>
 R1 <= "00000000";
 G1 <= "11111111";
 B1 <= "00000000";
 
 WHEN PINK =>
 R1 <= "11111111";
 G1 <= "00000000";
 B1 <= "11111111";
 
 WHEN TEAL =>
 R1 <= "00000000";
 G1 <= "11111111";
 B1 <= "11111111";
 
 WHEN YELLOW =>
 R1 <= "11111111";
 G1 <= "11111111";
 B1 <= "00000000";
 
 WHEN PURPLE =>
 R1 <= "10000000";
 G1 <= "00000000";
 B1 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R1 <= "00000000";
 G1 <= "10000000";
 B1 <= "11111111";
 
 WHEN ORANGE =>
 R1 <= "11111111";
 G1 <= "10000000";
 B1 <= "00000000";
 
 WHEN GREY =>
 R1 <= "10000000";
 G1 <= "10000000";
 B1 <= "10000000";

 WHEN WHITE =>
 R1 <= "11111111";
 G1 <= "11111111";
 B1 <= "11111111";
 
 END CASE;
	END PROCESS Box1;
	
	Box2 : PROCESS(X2) 
	BEGIN
	case x2 is
	WHEN BLACK =>
 R2 <= "00000000";
 G2 <= "00000000";
 B2 <= "00000000";
 
WHEN REDS =>
 R2 <= "11111111";
 G2 <= "00000000";
 B2 <= "00000000";

WHEN BLUES =>
 R2 <= "00000000";
 G2 <= "00000000";
 B2 <= "11111111";
 
 WHEN GREENS =>
 R2 <= "00000000";
 G2 <= "11111111";
 B2 <= "00000000";
 
 WHEN PINK =>
 R2 <= "11111111";
 G2 <= "00000000";
 B2 <= "11111111";
 
 WHEN TEAL =>
 R2 <= "00000000";
 G2 <= "11111111";
 B2 <= "11111111";
 
 WHEN YELLOW =>
 R2 <= "11111111";
 G2 <= "11111111";
 B2 <= "00000000";
 
 WHEN PURPLE =>
 R2 <= "10000000";
 G2 <= "00000000";
 B2 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R2 <= "00000000";
 G2 <= "10000000";
 B2 <= "11111111";
 
 WHEN ORANGE =>
 R2 <= "11111111";
 G2 <= "10000000";
 B2 <= "00000000";
 
 WHEN GREY =>
 R2 <= "10000000";
 G2 <= "10000000";
 B2 <= "10000000";

 WHEN WHITE =>
 R2 <= "11111111";
 G2 <= "11111111";
 B2 <= "11111111";
 
 END CASE;
	
	END PROCESS Box2;
	
	Box3 : PROCESS(X3) 
	begin
	Case X3 IS
	WHEN BLACK =>
 R3 <= "00000000";
 G3 <= "00000000";
 B3 <= "00000000";
 
WHEN REDS =>
 R3 <= "11111111";
 G3 <= "00000000";
 B3 <= "00000000";

WHEN BLUES =>
 R3 <= "00000000";
 G3 <= "00000000";
 B3 <= "11111111";
 
 WHEN GREENS =>
 R3 <= "00000000";
 G3 <= "11111111";
 B3 <= "00000000";
 
 WHEN PINK =>
 R3 <= "11111111";
 G3 <= "00000000";
 B3 <= "11111111";
 
 WHEN TEAL =>
 R3 <= "00000000";
 G3 <= "11111111";
 B3 <= "11111111";
 
 WHEN YELLOW =>
 R3 <= "11111111";
 G3 <= "11111111";
 B3 <= "00000000";
 
 WHEN PURPLE =>
 R3 <= "10000000";
 G3 <= "00000000";
 B3 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R3 <= "00000000";
 G3 <= "10000000";
 B3 <= "11111111";
 
 WHEN ORANGE =>
 R3 <= "11111111";
 G3 <= "10000000";
 B3 <= "00000000";
 
 WHEN GREY =>
 R3 <= "10000000";
 G3 <= "10000000";
 B3 <= "10000000";

 WHEN WHITE =>
 R3 <= "11111111";
 G3 <= "11111111";
 B3 <= "11111111";
 
 END CASE;
	
	END PROCESS Box3;
	
	Box4 : PROCESS(X4) 
	begin
	
	CASE X4 IS
	
	WHEN BLACK =>
 R4 <= "00000000";
 G4 <= "00000000";
 B4 <= "00000000";
 
WHEN REDS =>
 R4 <= "11111111";
 G4 <= "00000000";
 B4 <= "00000000";

WHEN BLUES =>
 R4 <= "00000000";
 G4 <= "00000000";
 B4 <= "11111111";
 
 WHEN GREENS =>
 R4 <= "00000000";
 G4 <= "11111111";
 B4 <= "00000000";
 
 WHEN PINK =>
 R4 <= "11111111";
 G4 <= "00000000";
 B4 <= "11111111";
 
 WHEN TEAL =>
 R4 <= "00000000";
 G4 <= "11111111";
 B4 <= "11111111";
 
 WHEN YELLOW =>
 R4 <= "11111111";
 G4 <= "11111111";
 B4 <= "00000000";
 
 WHEN PURPLE =>
 R4 <= "10000000";
 G4 <= "00000000";
 B4 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R4 <= "00000000";
 G4 <= "10000000";
 B4 <= "11111111";
 
 WHEN ORANGE =>
 R4 <= "11111111";
 G4 <= "10000000";
 B4 <= "00000000";
 
 WHEN GREY =>
 R4 <= "10000000";
 G4 <= "10000000";
 B4 <= "10000000";

 WHEN WHITE =>
 R4 <= "11111111";
 G4 <= "11111111";
 B4 <= "11111111";
 
 END CASE;
	
	END PROCESS Box4;
	
	Box5 : PROCESS(X5) 
	begin
	
	Case X5 IS
	
 R5 <= "00000000";
 G5 <= "00000000";
 B5 <= "00000000";
 
WHEN REDS =>
 R5 <= "11111111";
 G5 <= "00000000";
 B5 <= "00000000";

WHEN BLUES =>
 R5 <= "00000000";
 G5 <= "00000000";
 B5 <= "11111111";
 
 WHEN GREENS =>
 R5 <= "00000000";
 G5 <= "11111111";
 B5 <= "00000000";
 
 WHEN PINK =>
 R5 <= "11111111";
 G5 <= "00000000";
 B5 <= "11111111";
 
 WHEN TEAL =>
 R5 <= "00000000";
 G5 <= "11111111";
 B5 <= "11111111";
 
 WHEN YELLOW =>
 R5 <= "11111111";
 G5 <= "11111111";
 B5 <= "00000000";
 
 WHEN PURPLE =>
 R5 <= "10000000";
 G5 <= "00000000";
 B5 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R5 <= "00000000";
 G5 <= "10000000";
 B5 <= "11111111";
 
 WHEN ORANGE =>
 R5 <= "11111111";
 G5 <= "10000000";
 B5 <= "00000000";
 
 WHEN GREY =>
 R5 <= "10000000";
 G5 <= "10000000";
 B5 <= "10000000";

 WHEN WHITE =>
 R5 <= "11111111";
 G5 <= "11111111";
 B5 <= "11111111";
 
 END CASE;
	
	END PROCESS Box5;
	
	Box6 : PROCESS(X6) 
	begin
	
	CASE X6 IS
	WHEN BLACK =>
 R6 <= "00000000";
 G6 <= "00000000";
 B6 <= "00000000";
 
WHEN REDS =>
 R6 <= "11111111";
 G6 <= "00000000";
 B6 <= "00000000";

WHEN BLUES =>
 R6 <= "00000000";
 G6 <= "00000000";
 B6 <= "11111111";
 
 WHEN GREENS =>
 R6 <= "00000000";
 G6 <= "11111111";
 B6 <= "00000000";
 
 WHEN PINK =>
 R6 <= "11111111";
 G6 <= "00000000";
 B6 <= "11111111";
 
 WHEN TEAL =>
 R6 <= "00000000";
 G6 <= "11111111";
 B6 <= "11111111";
 
 WHEN YELLOW =>
 R6 <= "11111111";
 G6 <= "11111111";
 B6 <= "00000000";
 
 WHEN PURPLE =>
 R6 <= "10000000";
 G6 <= "00000000";
 B6 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R6 <= "00000000";
 G6 <= "10000000";
 B6 <= "11111111";
 
 WHEN ORANGE =>
 R6 <= "11111111";
 G6 <= "10000000";
 B6 <= "00000000";
 
 WHEN GREY =>
 R6 <= "10000000";
 G6 <= "10000000";
 B6 <= "10000000";

 WHEN WHITE =>
 R6 <= "11111111";
 G6 <= "11111111";
 B6 <= "11111111";
 
 END CASE;
	
	END PROCESS Box6;

	Box7 : PROCESS(X7) 
	begin
	
	CASE X7 IS
	WHEN BLACK =>
 R7 <= "00000000";
 G7 <= "00000000";
 B7 <= "00000000";
 
WHEN REDS =>
 R7 <= "11111111";
 G7 <= "00000000";
 B7 <= "00000000";

WHEN BLUES =>
 R7 <= "00000000";
 G7 <= "00000000";
 B7 <= "11111111";
 
 WHEN GREENS =>
 R7 <= "00000000";
 G7 <= "11111111";
 B7 <= "00000000";
 
 WHEN PINK =>
 R7 <= "11111111";
 G7 <= "00000000";
 B7 <= "11111111";
 
 WHEN TEAL =>
 R7 <= "00000000";
 G7 <= "11111111";
 B7 <= "11111111";
 
 WHEN YELLOW =>
 R7 <= "11111111";
 G7 <= "11111111";
 B7 <= "00000000";
 
 WHEN PURPLE =>
 R7 <= "10000000";
 G7 <= "00000000";
 B7 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R7 <= "00000000";
 G7 <= "10000000";
 B7 <= "11111111";
 
 WHEN ORANGE =>
 R7 <= "11111111";
 G7 <= "10000000";
 B7 <= "00000000";
 
 WHEN GREY =>
 R7 <= "10000000";
 G7 <= "10000000";
 B7 <= "10000000";

 WHEN WHITE =>
 R7 <= "11111111";
 G7 <= "11111111";
 B7 <= "11111111";
 
 END CASE;
	
	END PROCESS Box7;	
	
	Box8 : PROCESS(X8) 
	begin
	
	CASE X8 IS
	WHEN BLACK =>
 R8 <= "00000000";
 G8 <= "00000000";
 B8 <= "00000000";

WHEN REDS =>
 R8 <= "11111111";
 G8 <= "00000000";
 B8 <= "00000000";

WHEN BLUES =>
 R8 <= "00000000";
 G8 <= "00000000";
 B8 <= "11111111";
 
 WHEN GREENS =>
 R8 <= "00000000";
 G8 <= "11111111";
 B8 <= "00000000";
 
 WHEN PINK =>
 R8 <= "11111111";
 G8 <= "00000000";
 B8 <= "11111111";
 
 WHEN TEAL =>
 R8 <= "00000000";
 G8 <= "11111111";
 B8 <= "11111111";
 
 WHEN YELLOW =>
 R8 <= "11111111";
 G8 <= "11111111";
 B8 <= "00000000";
 
 WHEN PURPLE =>
 R8 <= "10000000";
 G8 <= "00000000";
 B8 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R8 <= "00000000";
 G8 <= "10000000";
 B8 <= "11111111";
 
 WHEN ORANGE =>
 R8 <= "11111111";
 G8 <= "10000000";
 B8 <= "00000000";
 
 WHEN GREY =>
 R8 <= "10000000";
 G8 <= "10000000";
 B8 <= "10000000";

 WHEN WHITE =>
 R8 <= "11111111";
 G8 <= "11111111";
 B8 <= "11111111";
 
 END CASE;
	
	END PROCESS Box8;
	
	Box9 : PROCESS(X9) 
	begin
	
	Case X9 IS
	WHEN BLACK =>
 R9 <= "00000000";
 G9 <= "00000000";
 B9 <= "00000000";
 
WHEN REDS =>
 R9 <= "11111111";
 G9 <= "00000000";
 B9 <= "00000000";

WHEN BLUES =>
 R9 <= "00000000";
 G9 <= "00000000";
 B9 <= "11111111";
 
 WHEN GREENS =>
 R9 <= "00000000";
 G9 <= "11111111";
 B9 <= "00000000";
 
 WHEN PINK =>
 R9 <= "11111111";
 G9 <= "00000000";
 B9 <= "11111111";
 
 WHEN TEAL =>
 R9 <= "00000000";
 G9 <= "11111111";
 B9 <= "11111111";
 
 WHEN YELLOW =>
 R9 <= "11111111";
 G9 <= "11111111";
 B9 <= "00000000";
 
 WHEN PURPLE =>
 R9 <= "10000000";
 G9 <= "00000000";
 B9 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R9 <= "00000000";
 G9 <= "10000000";
 B9 <= "11111111";
 
 WHEN ORANGE =>
 R9 <= "11111111";
 G9 <= "10000000";
 B9 <= "00000000";
 
 WHEN GREY =>
 R9 <= "10000000";
 G9 <= "10000000";
 B9 <= "10000000";

 WHEN WHITE =>
 R9 <= "11111111";
 G9 <= "11111111";
 B9 <= "11111111";
 
 END CASE;
	
	END PROCESS Box9;
	
	Box10 : PROCESS(X10) 
	begin
	
	CASE X10 IS
	WHEN BLACK =>
 R10 <= "00000000";
 G10 <= "00000000";
 B10 <= "00000000";
 
WHEN REDS =>
 R10 <= "11111111";
 G10 <= "00000000";
 B10 <= "00000000";

WHEN BLUES =>
 R10 <= "00000000";
 G10 <= "00000000";
 B10 <= "11111111";
 
 WHEN GREENS =>
 R10 <= "00000000";
 G10 <= "11111111";
 B10 <= "00000000";
 
 WHEN PINK =>
 R10 <= "11111111";
 G10 <= "00000000";
 B10 <= "11111111";
 
 WHEN TEAL =>
 R10 <= "00000000";
 G10 <= "11111111";
 B10 <= "11111111";
 
 WHEN YELLOW =>
 R10 <= "11111111";
 G10 <= "11111111";
 B10 <= "00000000";
 
 WHEN PURPLE =>
 R10 <= "10000000";
 G10 <= "00000000";
 B10 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R10 <= "00000000";
 G10 <= "10000000";
 B10 <= "11111111";
 
 WHEN ORANGE =>
 R10 <= "11111111";
 G10 <= "10000000";
 B10 <= "00000000";
 
 WHEN GREY =>
 R10 <= "10000000";
 G10 <= "10000000";
 B10 <= "10000000";

 WHEN WHITE =>
 R10 <= "11111111";
 G10 <= "11111111";
 B10 <= "11111111";
 
 END CASE;
	
	END PROCESS Box10;
	
	Box11 : PROCESS(X11) 
	begin
	
		CASE X11 IS
	WHEN BLACK =>
 R11 <= "00000000";
 G11 <= "00000000";
 B11 <= "00000000";
 
WHEN REDS =>
 R11 <= "11111111";
 G11 <= "00000000";
 B11 <= "00000000";

WHEN BLUES =>
 R11 <= "00000000";
 G11 <= "00000000";
 B11 <= "11111111";
 
 WHEN GREENS =>
 R11 <= "00000000";
 G11 <= "11111111";
 B11 <= "00000000";
 
 WHEN PINK =>
 R11 <= "11111111";
 G11 <= "00000000";
 B11 <= "11111111";
 
 WHEN TEAL =>
 R11 <= "00000000";
 G11 <= "11111111";
 B11 <= "11111111";
 
 WHEN YELLOW =>
 R11 <= "11111111";
 G11 <= "11111111";
 B11 <= "00000000";
 
 WHEN PURPLE =>
 R11 <= "10000000";
 G11 <= "00000000";
 B11 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R11 <= "00000000";
 G11 <= "10000000";
 B11 <= "11111111";
 
 WHEN ORANGE =>
 R11 <= "11111111";
 G11 <= "10000000";
 B11 <= "00000000";
 
 WHEN GREY =>
 R11 <= "10000000";
 G11 <= "10000000";
 B11 <= "10000000";

 WHEN WHITE =>
 R11 <= "11111111";
 G11 <= "11111111";
 B11 <= "11111111";
 
 END CASE;
	
	END PROCESS Box11;
	
	Box12 : PROCESS(X12) 
	begin
	
		CASE X12 IS
	WHEN BLACK =>
 R12 <= "00000000";
 G12 <= "00000000";
 B12 <= "00000000";
 
WHEN REDS =>
 R12 <= "11111111";
 G12 <= "00000000";
 B12 <= "00000000";

WHEN BLUES =>
 R12 <= "00000000";
 G12 <= "00000000";
 B12 <= "11111111";
 
 WHEN GREENS =>
 R12 <= "00000000";
 G12 <= "11111111";
 B12 <= "00000000";
 
 WHEN PINK =>
 R12 <= "11111111";
 G12 <= "00000000";
 B12 <= "11111111";
 
 WHEN TEAL =>
 R12 <= "00000000";
 G12 <= "11111111";
 B12 <= "11111111";
 
 WHEN YELLOW =>
 R12 <= "11111111";
 G12 <= "11111111";
 B12 <= "00000000";
 
 WHEN PURPLE =>
 R12 <= "10000000";
 G12 <= "00000000";
 B12 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R12 <= "00000000";
 G12 <= "10000000";
 B12 <= "11111111";
 
 WHEN ORANGE =>
 R12 <= "11111111";
 G12 <= "10000000";
 B12 <= "00000000";
 
 WHEN GREY =>
 R12 <= "10000000";
 G12 <= "10000000";
 B12 <= "10000000";

 WHEN WHITE =>
 R12 <= "11111111";
 G12 <= "11111111";
 B12 <= "11111111";
 
 END CASE;
	
	END PROCESS Box12;
	
	Box13 : PROCESS(X13) 
	begin
	
		CASE X13 IS
	WHEN BLACK =>
 R13 <= "00000000";
 G13 <= "00000000";
 B13 <= "00000000";
 
WHEN REDS =>
 R13 <= "11111111";
 G13 <= "00000000";
 B13 <= "00000000";

WHEN BLUES =>
 R13 <= "00000000";
 G13 <= "00000000";
 B13 <= "11111111";
 
 WHEN GREENS =>
 R13 <= "00000000";
 G13 <= "11111111";
 B13 <= "00000000";
 
 WHEN PINK =>
 R13 <= "11111111";
 G13 <= "00000000";
 B13 <= "11111111";
 
 WHEN TEAL =>
 R13 <= "00000000";
 G13 <= "11111111";
 B13 <= "11111111";
 
 WHEN YELLOW =>
 R13 <= "11111111";
 G13 <= "11111111";
 B13 <= "00000000";
 
 WHEN PURPLE =>
 R13 <= "10000000";
 G13 <= "00000000";
 B13 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R13 <= "00000000";
 G13 <= "10000000";
 B13 <= "11111111";
 
 WHEN ORANGE =>
 R13 <= "11111111";
 G13 <= "10000000";
 B13 <= "00000000";
 
 WHEN GREY =>
 R13 <= "10000000";
 G13 <= "10000000";
 B13 <= "10000000";

 WHEN WHITE =>
 R13 <= "11111111";
 G13 <= "11111111";
 B13 <= "11111111";
 
 END CASE;
	
	END PROCESS Box13;
	
	Box14 : PROCESS(X14) 
	begin
	
		CASE X14 IS
	WHEN BLACK =>
 R14 <= "00000000";
 G14 <= "00000000";
 B14 <= "00000000";
 
WHEN REDS =>
 R14 <= "11111111";
 G14 <= "00000000";
 B14 <= "00000000";

WHEN BLUES =>
 R14 <= "00000000";
 G14 <= "00000000";
 B14 <= "11111111";
 
 WHEN GREENS =>
 R14 <= "00000000";
 G14 <= "11111111";
 B14 <= "00000000";
 
 WHEN PINK =>
 R14 <= "11111111";
 G14 <= "00000000";
 B14 <= "11111111";

 WHEN TEAL =>
 R14 <= "00000000";
 G14 <= "11111111";
 B14 <= "11111111";
 
 WHEN YELLOW =>
 R14 <= "11111111";
 G14 <= "11111111";
 B14 <= "00000000";
 
 WHEN PURPLE =>
 R14 <= "10000000";
 G14 <= "00000000";
 B14 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R14 <= "00000000";
 G14 <= "10000000";
 B14 <= "11111111";
 
 WHEN ORANGE =>
 R14 <= "11111111";
 G14 <= "10000000";
 B14 <= "00000000";
 
 WHEN GREY =>
 R14 <= "10000000";
 G14 <= "10000000";
 B14 <= "10000000";

 WHEN WHITE =>
 R14 <= "11111111";
 G14 <= "11111111";
 B14 <= "11111111";
 
 END CASE;
	
	END PROCESS Box14;
	
	Box15 : PROCESS(X15) 
	begin
	
	CASE X15 IS
WHEN BLACK =>
 R15 <= "00000000";
 G15 <= "00000000";
 B15 <= "00000000";
 
WHEN REDS =>
 R15 <= "11111111";
 G15 <= "00000000";
 B15 <= "00000000";

WHEN BLUES =>
 R15 <= "00000000";
 G15 <= "00000000";
 B15 <= "11111111";
 
 WHEN GREENS =>
 R15 <= "00000000";
 G15 <= "11111111";
 B15 <= "00000000";
 
 WHEN PINK =>
 R15 <= "11111111";
 G15 <= "00000000";
 B15 <= "11111111";
 
 WHEN TEAL =>
 R15 <= "00000000";
 G15 <= "11111111";
 B15 <= "11111111";
 
 WHEN YELLOW =>
 R15 <= "11111111";
 G15 <= "11111111";
 B15 <= "00000000";
 
 WHEN PURPLE =>
 R15 <= "10000000";
 G15 <= "00000000";
 B15 <= "11111111";
 
 WHEN LIGHTBLUE =>
 R15 <= "00000000";
 G15 <= "10000000";
 B15 <= "11111111";
 
 WHEN ORANGE =>
 R15 <= "11111111";
 G15 <= "10000000";
 B15 <= "00000000";
 
 WHEN GREY =>
 R15 <= "10000000";
 G15 <= "10000000";
 B15 <= "10000000";

 WHEN WHITE =>
 R15 <= "11111111";
 G15 <= "11111111";
 B15 <= "11111111";
 
 END CASE;
 END PROCESS;
	
END behavior;
